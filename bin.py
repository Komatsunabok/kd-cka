# added by me
from models import model_dict
import torch
import torch.nn as nn

def print_layer_output_shapes(model, input_shape):
    def register_hook(module):
        def hook(module, input, output):
            class_name = module.__class__.__name__
            module_idx = len(summary)
            m_key = f"{module_idx}_{class_name}"
            summary[m_key] = output.shape
        if not isinstance(module, nn.Sequential) and not isinstance(module, nn.ModuleList) and not (module == model):
            hooks.append(module.register_forward_hook(hook))

    summary = {}
    hooks = []
    model.apply(register_hook)
    dummy_input = torch.randn(*input_shape)
    model(dummy_input)
    for k, v in summary.items():
        print(f"{k}: {v}")
    for h in hooks:
        h.remove()

input_shape = {
    'cifar10':(1, 3, 32, 32),
}

# 例: ResNet18の構造を表示
# model = resnet18(num_classes=10)
model = model_dict["resnet32x4"](num_classes=10)
print_layer_output_shapes(model, input_shape["cifar10"])

"""
resnet38x4: torch.Size([1, 10])
0_Conv2d: torch.Size([1, 32, 32, 32])
1_BatchNorm2d: torch.Size([1, 32, 32, 32])
2_ReLU: torch.Size([1, 32, 32, 32])
3_Conv2d: torch.Size([1, 64, 32, 32])
4_BatchNorm2d: torch.Size([1, 64, 32, 32])
5_ReLU: torch.Size([1, 64, 32, 32])
6_Conv2d: torch.Size([1, 64, 32, 32])
7_BatchNorm2d: torch.Size([1, 64, 32, 32])
8_Conv2d: torch.Size([1, 64, 32, 32])
9_BatchNorm2d: torch.Size([1, 64, 32, 32])
10_ReLU: torch.Size([1, 64, 32, 32])
11_BasicBlock: torch.Size([1, 64, 32, 32])
12_Conv2d: torch.Size([1, 64, 32, 32])
13_BatchNorm2d: torch.Size([1, 64, 32, 32])
14_ReLU: torch.Size([1, 64, 32, 32])
15_Conv2d: torch.Size([1, 64, 32, 32])
16_BatchNorm2d: torch.Size([1, 64, 32, 32])
17_ReLU: torch.Size([1, 64, 32, 32])
18_BasicBlock: torch.Size([1, 64, 32, 32])
19_Conv2d: torch.Size([1, 64, 32, 32])
20_BatchNorm2d: torch.Size([1, 64, 32, 32])
21_ReLU: torch.Size([1, 64, 32, 32])
22_Conv2d: torch.Size([1, 64, 32, 32])
23_BatchNorm2d: torch.Size([1, 64, 32, 32])
24_ReLU: torch.Size([1, 64, 32, 32])
25_BasicBlock: torch.Size([1, 64, 32, 32])
26_Conv2d: torch.Size([1, 64, 32, 32])
27_BatchNorm2d: torch.Size([1, 64, 32, 32])
28_ReLU: torch.Size([1, 64, 32, 32])
29_Conv2d: torch.Size([1, 64, 32, 32])
30_BatchNorm2d: torch.Size([1, 64, 32, 32])
31_ReLU: torch.Size([1, 64, 32, 32])
32_BasicBlock: torch.Size([1, 64, 32, 32])
33_Conv2d: torch.Size([1, 64, 32, 32])
34_BatchNorm2d: torch.Size([1, 64, 32, 32])
35_ReLU: torch.Size([1, 64, 32, 32])
36_Conv2d: torch.Size([1, 64, 32, 32])
37_BatchNorm2d: torch.Size([1, 64, 32, 32])
38_ReLU: torch.Size([1, 64, 32, 32])
39_BasicBlock: torch.Size([1, 64, 32, 32])
40_Conv2d: torch.Size([1, 64, 32, 32])
41_BatchNorm2d: torch.Size([1, 64, 32, 32])
42_ReLU: torch.Size([1, 64, 32, 32])
43_Conv2d: torch.Size([1, 64, 32, 32])
44_BatchNorm2d: torch.Size([1, 64, 32, 32])
45_ReLU: torch.Size([1, 64, 32, 32])
46_BasicBlock: torch.Size([1, 64, 32, 32])
47_Conv2d: torch.Size([1, 128, 16, 16])
48_BatchNorm2d: torch.Size([1, 128, 16, 16])
49_ReLU: torch.Size([1, 128, 16, 16])
50_Conv2d: torch.Size([1, 128, 16, 16])
51_BatchNorm2d: torch.Size([1, 128, 16, 16])
52_Conv2d: torch.Size([1, 128, 16, 16])
53_BatchNorm2d: torch.Size([1, 128, 16, 16])
54_ReLU: torch.Size([1, 128, 16, 16])
55_BasicBlock: torch.Size([1, 128, 16, 16])
56_Conv2d: torch.Size([1, 128, 16, 16])
57_BatchNorm2d: torch.Size([1, 128, 16, 16])
58_ReLU: torch.Size([1, 128, 16, 16])
59_Conv2d: torch.Size([1, 128, 16, 16])
60_BatchNorm2d: torch.Size([1, 128, 16, 16])
61_ReLU: torch.Size([1, 128, 16, 16])
62_BasicBlock: torch.Size([1, 128, 16, 16])
63_Conv2d: torch.Size([1, 128, 16, 16])
64_BatchNorm2d: torch.Size([1, 128, 16, 16])
65_ReLU: torch.Size([1, 128, 16, 16])
66_Conv2d: torch.Size([1, 128, 16, 16])
67_BatchNorm2d: torch.Size([1, 128, 16, 16])
68_ReLU: torch.Size([1, 128, 16, 16])
69_BasicBlock: torch.Size([1, 128, 16, 16])
70_Conv2d: torch.Size([1, 128, 16, 16])
71_BatchNorm2d: torch.Size([1, 128, 16, 16])
72_ReLU: torch.Size([1, 128, 16, 16])
73_Conv2d: torch.Size([1, 128, 16, 16])
74_BatchNorm2d: torch.Size([1, 128, 16, 16])
75_ReLU: torch.Size([1, 128, 16, 16])
76_BasicBlock: torch.Size([1, 128, 16, 16])
77_Conv2d: torch.Size([1, 128, 16, 16])
78_BatchNorm2d: torch.Size([1, 128, 16, 16])
79_ReLU: torch.Size([1, 128, 16, 16])
80_Conv2d: torch.Size([1, 128, 16, 16])
81_BatchNorm2d: torch.Size([1, 128, 16, 16])
82_ReLU: torch.Size([1, 128, 16, 16])
83_BasicBlock: torch.Size([1, 128, 16, 16])
84_Conv2d: torch.Size([1, 128, 16, 16])
85_BatchNorm2d: torch.Size([1, 128, 16, 16])
86_ReLU: torch.Size([1, 128, 16, 16])
87_Conv2d: torch.Size([1, 128, 16, 16])
88_BatchNorm2d: torch.Size([1, 128, 16, 16])
89_ReLU: torch.Size([1, 128, 16, 16])
90_BasicBlock: torch.Size([1, 128, 16, 16])
91_Conv2d: torch.Size([1, 256, 8, 8])
92_BatchNorm2d: torch.Size([1, 256, 8, 8])
93_ReLU: torch.Size([1, 256, 8, 8])
94_Conv2d: torch.Size([1, 256, 8, 8])
95_BatchNorm2d: torch.Size([1, 256, 8, 8])
96_Conv2d: torch.Size([1, 256, 8, 8])
97_BatchNorm2d: torch.Size([1, 256, 8, 8])
98_ReLU: torch.Size([1, 256, 8, 8])
99_BasicBlock: torch.Size([1, 256, 8, 8])
100_Conv2d: torch.Size([1, 256, 8, 8])
101_BatchNorm2d: torch.Size([1, 256, 8, 8])
102_ReLU: torch.Size([1, 256, 8, 8])
103_Conv2d: torch.Size([1, 256, 8, 8])
104_BatchNorm2d: torch.Size([1, 256, 8, 8])
105_ReLU: torch.Size([1, 256, 8, 8])
106_BasicBlock: torch.Size([1, 256, 8, 8])
107_Conv2d: torch.Size([1, 256, 8, 8])
108_BatchNorm2d: torch.Size([1, 256, 8, 8])
109_ReLU: torch.Size([1, 256, 8, 8])
110_Conv2d: torch.Size([1, 256, 8, 8])
111_BatchNorm2d: torch.Size([1, 256, 8, 8])
112_ReLU: torch.Size([1, 256, 8, 8])
113_BasicBlock: torch.Size([1, 256, 8, 8])
114_Conv2d: torch.Size([1, 256, 8, 8])
115_BatchNorm2d: torch.Size([1, 256, 8, 8])
116_ReLU: torch.Size([1, 256, 8, 8])
117_Conv2d: torch.Size([1, 256, 8, 8])
118_BatchNorm2d: torch.Size([1, 256, 8, 8])
119_ReLU: torch.Size([1, 256, 8, 8])
120_BasicBlock: torch.Size([1, 256, 8, 8])
121_Conv2d: torch.Size([1, 256, 8, 8])
122_BatchNorm2d: torch.Size([1, 256, 8, 8])
123_ReLU: torch.Size([1, 256, 8, 8])
124_Conv2d: torch.Size([1, 256, 8, 8])
125_BatchNorm2d: torch.Size([1, 256, 8, 8])
126_ReLU: torch.Size([1, 256, 8, 8])
127_BasicBlock: torch.Size([1, 256, 8, 8])
128_Conv2d: torch.Size([1, 256, 8, 8])
129_BatchNorm2d: torch.Size([1, 256, 8, 8])
130_ReLU: torch.Size([1, 256, 8, 8])
131_Conv2d: torch.Size([1, 256, 8, 8])
132_BatchNorm2d: torch.Size([1, 256, 8, 8])
133_ReLU: torch.Size([1, 256, 8, 8])
134_BasicBlock: torch.Size([1, 256, 8, 8])
135_AdaptiveAvgPool2d: torch.Size([1, 256, 1, 1])
136_Linear: torch.Size([1, 10])
"""